[project]
name = "smartcatcher"
version = "1.0.0"
description = "Discount & Coupon Aggregator Bot with Telegram integration"
readme = "README.md"
requires-python = ">=3.11"
license = "MIT"
authors = [
    { name = "ka4en3" }
]

dependencies = [
  "fastapi>=0.104.1",
  "uvicorn[standard]>=0.24.0",
  "sqlalchemy>=2.0.23",
  "asyncpg>=0.29.0",
  "alembic>=1.12.1",
  "sqlmodel>=0.0.8",
  "pydantic>=2.5.0",
  "pydantic[email]>=2.5.0",
  "pydantic-settings>=2.1.0",
  "passlib[bcrypt]>=1.7.4",
  "python-jose[cryptography]>=3.3.0",
  "python-multipart>=0.0.6",
  "celery>=5.3.4",
  "redis>=5.0.1",
  "aiogram>=3.2.0",
  "httpx>=0.25.2",
  "beautifulsoup4>=4.12.2",
  "lxml>=4.9.3",
  "requests>=2.31.0",
  "aiofiles>=23.2.1",
  "python-dotenv>=1.0.0",
  "email-validator>=2.1.0",
  "bcrypt<4.2.0",
]

[dependency-groups]
dev = [
  "pytest>=7.4.3",
  "pytest-asyncio>=0.21.1",
  "pytest-cov>=4.1.0",
  "black>=23.11.0",
  "isort>=5.12.0",
  "ruff>=0.1.6",
  "mypy>=1.7.1",
  "pre-commit>=3.6.0",
  "httpx>=0.25.2",
]

[tool.black]
target-version = ["py311"]
line-length = 88
skip-string-normalization = true

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.ruff]
target-version = "py311"
line-length = 88
select = [
  "E",  # pycodestyle errors
  "W",  # pycodestyle warnings
  "F",  # pyflakes
  "I",  # isort
  "C",  # flake8-comprehensions
  "B",  # flake8-bugbear
]
ignore = [
  "E501",  # line too long, handled by black
  "B008",  # do not perform function calls in argument defaults
  "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
disallow_any_generics = true
disallow_untyped_calls = true
disallow_untyped_defs = true
ignore_missing_imports = true
no_implicit_optional = true
show_error_codes = true
strict_equality = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
no_implicit_reexport = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
pythonpath = ["backend", "bot", "worker", "."]

[tool.coverage.run]
source = ["backend", "bot", "worker"]
branch = true

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "raise AssertionError",
  "raise NotImplementedError",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]
