"""next migration

Revision ID: 5e948ddbff6b
Revises:
Create Date: 2025-10-21 14:50:45.184066

"""

from typing import Sequence, Union

import sqlmodel
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '5e948ddbff6b'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'products',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('url', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column('brand', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column('current_price', sa.Numeric(scale=2), nullable=True),
        sa.Column(
            'currency',
            sqlmodel.sql.sqltypes.AutoString(length=3),
            nullable=False,
        ),
        sa.Column(
            'store_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False
        ),
        sa.Column(
            'external_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True
        ),
        sa.Column(
            'image_url', sqlmodel.sql.sqltypes.AutoString(), nullable=True
        ),
        sa.Column(
            'affiliate_link', sqlmodel.sql.sqltypes.AutoString(), nullable=True
        ),
        sa.Column('is_active', sa.Boolean(), nullable=False),
        sa.Column('last_scraped_at', sa.DateTime(), nullable=True),
        sa.Column(
            'created_at',
            sa.DateTime(timezone=True),
            server_default=sa.text('now()'),
            nullable=True,
        ),
        sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(
        op.f('ix_products_brand'), 'products', ['brand'], unique=False
    )
    op.create_index(
        op.f('ix_products_external_id'),
        'products',
        ['external_id'],
        unique=False,
    )
    op.create_index(
        op.f('ix_products_store_name'),
        'products',
        ['store_name'],
        unique=False,
    )
    op.create_index(
        op.f('ix_products_title'), 'products', ['title'], unique=False
    )
    op.create_index(op.f('ix_products_url'), 'products', ['url'], unique=True)
    op.create_table(
        'users',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column(
            'hashed_password',
            sqlmodel.sql.sqltypes.AutoString(),
            nullable=False,
        ),
        sa.Column('is_active', sa.Boolean(), nullable=False),
        sa.Column('is_admin', sa.Boolean(), nullable=False),
        sa.Column('telegram_user_id', sa.Integer(), nullable=True),
        sa.Column(
            'telegram_username',
            sqlmodel.sql.sqltypes.AutoString(),
            nullable=True,
        ),
        sa.Column(
            'created_at',
            sa.DateTime(timezone=True),
            server_default=sa.text('now()'),
            nullable=True,
        ),
        sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(
        op.f('ix_users_telegram_user_id'),
        'users',
        ['telegram_user_id'],
        unique=False,
    )
    op.create_table(
        'price_history',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('product_id', sa.Integer(), nullable=False),
        sa.Column('price', sa.Numeric(scale=2), nullable=False),
        sa.Column(
            'currency',
            sqlmodel.sql.sqltypes.AutoString(length=3),
            nullable=False,
        ),
        sa.Column(
            'recorded_at',
            sa.DateTime(timezone=True),
            server_default=sa.text('now()'),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ['product_id'], ['products.id'], ondelete='CASCADE'
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(
        op.f('ix_price_history_product_id'),
        'price_history',
        ['product_id'],
        unique=False,
    )
    op.create_table(
        'subscriptions',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('product_id', sa.Integer(), nullable=True),
        sa.Column(
            'subscription_type',
            sa.Enum('PRODUCT', 'BRAND', name='subscriptiontype'),
            nullable=False,
        ),
        sa.Column(
            'brand_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True
        ),
        sa.Column('price_threshold', sa.Numeric(scale=2), nullable=True),
        sa.Column('percentage_threshold', sa.Float(), nullable=True),
        sa.Column('is_active', sa.Boolean(), nullable=False),
        sa.Column(
            'created_at',
            sa.DateTime(timezone=True),
            server_default=sa.text('now()'),
            nullable=True,
        ),
        sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ['product_id'], ['products.id'], ondelete='CASCADE'
        ),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(
        op.f('ix_subscriptions_brand_name'),
        'subscriptions',
        ['brand_name'],
        unique=False,
    )
    op.create_index(
        op.f('ix_subscriptions_user_id'),
        'subscriptions',
        ['user_id'],
        unique=False,
    )
    op.create_table(
        'notifications',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('subscription_id', sa.Integer(), nullable=False),
        sa.Column('product_id', sa.Integer(), nullable=True),
        sa.Column(
            'notification_type',
            sa.Enum(
                'PRICE_DROP',
                'PRICE_THRESHOLD',
                'PRODUCT_AVAILABLE',
                'ERROR',
                name='notificationtype',
            ),
            nullable=False,
        ),
        sa.Column(
            'status',
            sa.Enum('PENDING', 'SENT', 'FAILED', name='notificationstatus'),
            nullable=False,
        ),
        sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column('message', sa.Text(), nullable=True),
        sa.Column('telegram_message_id', sa.Integer(), nullable=True),
        sa.Column(
            'error_message', sqlmodel.sql.sqltypes.AutoString(), nullable=True
        ),
        sa.Column('sent_at', sa.DateTime(), nullable=True),
        sa.Column(
            'created_at',
            sa.DateTime(timezone=True),
            server_default=sa.text('now()'),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ['product_id'], ['products.id'], ondelete='CASCADE'
        ),
        sa.ForeignKeyConstraint(
            ['subscription_id'], ['subscriptions.id'], ondelete='CASCADE'
        ),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(
        op.f('ix_notifications_notification_type'),
        'notifications',
        ['notification_type'],
        unique=False,
    )
    op.create_index(
        op.f('ix_notifications_status'),
        'notifications',
        ['status'],
        unique=False,
    )
    op.create_index(
        op.f('ix_notifications_subscription_id'),
        'notifications',
        ['subscription_id'],
        unique=False,
    )
    op.create_index(
        op.f('ix_notifications_user_id'),
        'notifications',
        ['user_id'],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_notifications_user_id'), table_name='notifications')
    op.drop_index(
        op.f('ix_notifications_subscription_id'), table_name='notifications'
    )
    op.drop_index(op.f('ix_notifications_status'), table_name='notifications')
    op.drop_index(
        op.f('ix_notifications_notification_type'), table_name='notifications'
    )
    op.drop_table('notifications')
    op.drop_index(op.f('ix_subscriptions_user_id'), table_name='subscriptions')
    op.drop_index(
        op.f('ix_subscriptions_brand_name'), table_name='subscriptions'
    )
    op.drop_table('subscriptions')
    op.drop_index(
        op.f('ix_price_history_product_id'), table_name='price_history'
    )
    op.drop_table('price_history')
    op.drop_index(op.f('ix_users_telegram_user_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_products_url'), table_name='products')
    op.drop_index(op.f('ix_products_title'), table_name='products')
    op.drop_index(op.f('ix_products_store_name'), table_name='products')
    op.drop_index(op.f('ix_products_external_id'), table_name='products')
    op.drop_index(op.f('ix_products_brand'), table_name='products')
    op.drop_table('products')
    # ### end Alembic commands ###
